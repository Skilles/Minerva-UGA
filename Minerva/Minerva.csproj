<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <Nullable>enable</Nullable>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
        <SpaProxyServerUrl>https://localhost:44400</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
        <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Dapper" Version="2.0.123"/>
        <PackageReference Include="FastEndpoints" Version="5.7.0"/>
        <PackageReference Include="FastEndpoints.Swagger" Version="5.7.0"/>
        <PackageReference Include="GraphQL.Client" Version="5.1.1"/>
        <PackageReference Include="GraphQL.Client.Abstractions" Version="5.1.1"/>
        <PackageReference Include="GraphQL.Client.Serializer.SystemTextJson" Version="5.1.1"/>
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="7.0.2"/>
        <PackageReference Include="Microsoft.Data.SqlClient" Version="5.1.0"/>
        <PackageReference Include="MongoDB.Driver" Version="2.18.0"/>
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.5.0"/>
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="7.0.2"/>
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="ClientApp\tsconfig.json" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
        <_ContentIncludedByDefault Remove="Pages\Error.cshtml" />
        <_ContentIncludedByDefault Remove="Pages\_ViewImports.cshtml" />
        <_ContentIncludedByDefault Remove="ClientApp\package-lock.json" />
        <_ContentIncludedByDefault Remove="ClientApp\package.json" />
        <_ContentIncludedByDefault Remove="ClientApp\public\manifest.json" />
        <_ContentIncludedByDefault Remove="wwwroot\css\bootstrap\bootstrap.min.css" />
        <_ContentIncludedByDefault Remove="wwwroot\css\bootstrap\bootstrap.min.css.map" />
        <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\FONT-LICENSE" />
        <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\css\open-iconic-bootstrap.min.css" />
        <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\fonts\open-iconic.eot" />
        <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\fonts\open-iconic.otf" />
        <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\fonts\open-iconic.svg" />
        <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\fonts\open-iconic.ttf" />
        <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\font\fonts\open-iconic.woff" />
        <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\ICON-LICENSE" />
        <_ContentIncludedByDefault Remove="wwwroot\css\open-iconic\README.md" />
        <_ContentIncludedByDefault Remove="wwwroot\css\site.css" />
        <_ContentIncludedByDefault Remove="wwwroot\favicon.png" />
    </ItemGroup>

    <ItemGroup>
      <TypeScriptCompile Include="ClientApp\src\ApiFetch.ts" />
      <TypeScriptCompile Include="ClientApp\src\components\Dashboard.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\IntroSection.tsx" />
      <TypeScriptCompile Include="ClientApp\src\components\NavBar.tsx" />
      <TypeScriptCompile Include="ClientApp\src\context\AuthContext.tsx" />
      <None Include="ClientApp\src\context\AuthProvider.tsx" />
      <TypeScriptCompile Include="ClientApp\src\hooks\useAuth.ts" />
      <TypeScriptCompile Include="ClientApp\src\hooks\useLocalStorage.ts" />
      <TypeScriptCompile Include="ClientApp\src\hooks\usePlanner.ts" />
      <TypeScriptCompile Include="ClientApp\src\hooks\useUser.ts" />
      <TypeScriptCompile Include="ClientApp\src\models\planner.ts" />
      <TypeScriptCompile Include="ClientApp\src\pages\Login.tsx" />
      <TypeScriptCompile Include="ClientApp\src\pages\Planner.tsx" />
      <TypeScriptCompile Include="ClientApp\src\pages\Register.tsx" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)build\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
